{
	"info": {
		"_postman_id": "e7484f57-2e6f-47cc-a152-1259985224c2",
		"name": "new Books Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31840755"
	},
	"item": [
		{
			"name": "booksApiAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"if( pm.response.to.have.status(201)){\r",
							"    pm.globals.set(\"bearerToken\",pm.response.json().accessToken);\r",
							"    pm.collectionVariables.set(\"bearerToken\",pm.globals.get(\"bearerToken\"));\r",
							"}\r",
							"console.log(pm.globals.get(\"bearerToken\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": {{customerName}},\r\n   \"clientEmail\": {{customerEmail}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/api-clients",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "bookstatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "listofbooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res=pm.response.json();\r",
							"\r",
							"console.log(res);\r",
							"\r",
							"const res2=res.filter((x)=>x.available === true);\r",
							"\r",
							"console.log(res2[0]);\r",
							"\r",
							"pm.test(\"midnight library present\",()=>\r",
							"{\r",
							"    pm.expect(res2.any((x)=>x.name === \"The Midnight Library\"));\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books?type=fiction",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getBooksWithId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const res = pm.response.json();\r",
							"\r",
							"console.log(res.type);\r",
							"\r",
							"pm.test(\"author is Julia\",function(){pm.expect(res.author).to.eql(\"Julia Quinn\")});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books/:bookid",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						":bookid"
					],
					"variable": [
						{
							"key": "bookid",
							"value": "6"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "submitNewOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.globals.get(\"bearerToken\"));\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"if (pm.response.to.have.status(201)){\r",
							"    console.log(pm.response.json());\r",
							"    pm.environment.set(\"newBookOrderId\",pm.response.json().orderId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\":\"1\",\r\n    \"customerName\":\"Suriya\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getOrders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.to.have.status(200)){\r",
							"console.log(pm.environment.get(\"newBookOrderId\"));\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteNewOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders/:{orderId}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						":{orderId}"
					],
					"variable": [
						{
							"key": "{orderId}",
							"value": "{{newBookOrderId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(pm.environment.get(\"customerName\"));",
					"console.log(pm.environment.get(\"customerEmail\"));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simple-books-api.glitch.me",
			"type": "string"
		},
		{
			"key": "newBookOrderId",
			"value": "default",
			"type": "string"
		},
		{
			"key": "bearerToken",
			"value": "def",
			"type": "string"
		}
	]
}